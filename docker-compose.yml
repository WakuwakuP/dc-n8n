version: '3.3'

volumes:
  db_storage:
  n8n_storage:
  certs:
    external: true

services:
  nginx:
    image: nginx:alpine
    container_name: n8n-nginx
    expose:
      - "20100"
    restart: always
    tty: false
    environment:
      - "VIRTUAL_HOST=n8n.wakuwakup.net"
      - "VIRTUAL_PORT=20100"
      - "VIRTUAL_PROTO=https"
      - "LETSENCRYPT_HOST=n8n.wakuwakup.net"
      - "LETSENCRYPT_EMAIL=naoki.fujisawa@wakuwakup.net"
      - "LETSENCRYPT_TEST=false"
    links:
      - n8n
    depends_on:
      - n8n
    volumes:
      - .setting/nginx/nginx.conf:/etc/nginx/nginx.conf
      - .setting/nginx/conf.d:/etc/nginx/conf.d
      - certs:/etc/nginx/certs
    networks:
      - front
      - back-n8n

  postgres:
    image: postgres:11
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_NON_ROOT_USER
      - POSTGRES_NON_ROOT_PASSWORD
    volumes:
      - db_storage:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
        ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - back-n8n

  n8n:
    image: n8nio/n8n
    restart: always
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER
      - N8N_BASIC_AUTH_PASSWORD
    ports:
      - 5678:5678
    links:
      - postgres
    volumes:
      - n8n_storage:/home/node/
    command: /bin/sh -c "n8n start --tunnel"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - back-n8n

networks:
  front:
    external: true
  back-n8n:
    external: true
